@using Microsoft.AspNetCore.Mvc
@using Models;
@using InventoryManagementSystem.API.DTO;
@inject InventoryManagementSystem.API.Controllers.Product.ProductController _productController;

<div class="flex justify-center">
    <table>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Quantity</th>
            <th>Info</th>
        </tr>
        <tbody>
            @foreach (var product in Products)
            {
                <tr>
                    <td>@product.ProductName</td>
                    <td>@product.Description</td>
                    <td>@product.Quantity</td>
                    <td>@product.AdditionalInfo</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    public IEnumerable<ProductViewModel> Products { get; set; } = new List<ProductViewModel>();

    protected override async Task OnInitializedAsync()
    {
        var product = await _productController.GetProducts();
        if (product.Result != null && product.Result is OkObjectResult okObjectResult)
        {
            var productDto = okObjectResult.Value as IEnumerable<ProductDTO>;
            var productList = MapProductView(productDto).ToList();
            Products = productList;
        }
    }

    private IEnumerable<ProductViewModel> MapProductView(IEnumerable<ProductDTO> productDto)
    {
        if (productDto == null)
        {
            return Enumerable.Empty<ProductViewModel>();
        }

        var productView = productDto.Select(dto => new ProductViewModel
            {
                AdditionalInfo = dto.AdditionalInfo,
                ProductName = dto.ProductName,
                Quantity = dto.Quantity,
                Description = dto.Description,
            });

        return productView;
    }
}
