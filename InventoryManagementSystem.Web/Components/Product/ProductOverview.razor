@using Microsoft.AspNetCore.Mvc
@using Models;
@using InventoryManagementSystem.API.DTO;
@inject InventoryManagementSystem.API.Controllers.Product.ProductController _productController;
@if (!isLoading)
{
    <div class="bg-[#2C333A] border-[#39DB7D] w-full rounded-lg text-white backdrop-blur-sm">
        <h3 class="border-t-0 border-r-0 border-l-0 border border-slate-200 p-3 text-base font-medium">Product Overview</h3>
        <div class="p-2">
            <span class="p-2 pt-0 text-base font-medium text-white">@Product.ProductName</span>
            <div class="p-2">
                <span class="text-xs font-light">@Product.Description</span>
            </div>
            <div class="p-2">
                <span class="text-xs font-light">@Product.AdditionalInfo</span>
            </div>
        </div>
    </div>
}
else
{
    <div class="bg-[#2C333A] w-full rounded-lg p-3 text-white backdrop-blur-sm">
        <h3 class="p-2 pb-0 text-base font-medium"></h3>
        <span class="p-2 pt-0 text-xs font-medium text-white"></span>
    </div>
}

@code {

    [Parameter]
    public int ProductId { get; set; }

    public ProductViewModel Product { get; set; }

    private bool isLoading = true;
    protected override async Task OnParametersSetAsync()
    {
        if (ProductId != 0)
        {
            Product = await GetProductById(ProductId);
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task<ProductViewModel> GetProductById(int productId)
    {
        ProductViewModel selectedProduct = new ProductViewModel();
        var product = await _productController.GetProduct(productId);
        if (product.Result != null && product.Result is OkObjectResult okObjectResult)
        {
            var productDto = okObjectResult.Value as ProductDTO;
            selectedProduct = MapProductView(productDto);
        }
        return selectedProduct;
    }

    private ProductViewModel MapProductView(ProductDTO productDto)
    {
        if (productDto == null)
        {
            return new ProductViewModel();
        }

        var productView = new ProductViewModel
            {
                ProductId = productDto.ProductId,
                ProductName = productDto.ProductName,
                Quantity = productDto.Quantity,
                Description = productDto.Description,
                AdditionalInfo = productDto.AdditionalInfo,
                CreatedDate = productDto.CreatedDate,
                ModifiedDate = productDto.ModifiedDate
            };
        return productView;
    }
}
